    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. copy_4_constants               v = testInputs
    4. zero_slot_unmasked             $0 = 0
    5. copy_4_slots_unmasked          $1..4 = v
    6. swizzle_3                      $1..3 = ($1..3).zyx
    7. copy_4_slots_unmasked          v = $0..3
    8. zero_2_slots_unmasked          $0..1 = 0
    9. copy_4_slots_unmasked          $2..5 = v
   10. swizzle_1                      $3 = ($3..5).z
   11. copy_4_slots_unmasked          v = $0..3
   12. copy_constant                  $0 = 0x3F800000 (1.0)
   13. copy_constant                  $1 = 0x3F800000 (1.0)
   14. copy_4_slots_unmasked          $2..5 = v
   15. swizzle_2                      $2..3 = ($2..5).wx
   16. copy_4_slots_unmasked          v = $0..3
   17. swizzle_2                      $0..1 = ($0..2).zy
   18. copy_constant                  $2 = 0x3F800000 (1.0)
   19. copy_constant                  $3 = 0x3F800000 (1.0)
   20. copy_4_slots_unmasked          v = $0..3
   21. swizzle_2                      $0..1 = ($0..1).xx
   22. copy_constant                  $2 = 0x3F800000 (1.0)
   23. copy_constant                  $3 = 0x3F800000 (1.0)
   24. copy_4_slots_unmasked          v = $0..3
   25. swizzle_4                      $0..3 = ($0..3).wzwz
   26. copy_4_slots_unmasked          v = $0..3
   27. copy_4_slots_unmasked          v₁ = $0..3
   28. store_return_mask              $0 = RetMask
   29. copy_constant                  x = 0x00000001 (1.401298e-45)
   30. store_loop_mask                $1 = LoopMask
   31. jump                           jump +9 (label 2 at #40)
   32. label                          label 0x00000003
   33. copy_slot_unmasked             $2 = v₁(0)
   34. copy_slot_masked               [fn].result = Mask($2)
   35. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   36. copy_slot_unmasked             $2 = x
   37. copy_constant                  $3 = 0x00000001 (1.401298e-45)
   38. add_int                        $2 += $3
   39. copy_slot_masked               x = Mask($2)
   40. label                          label 0x00000002
   41. copy_slot_unmasked             $2 = x
   42. copy_constant                  $3 = 0x00000002 (2.802597e-45)
   43. cmple_int                      $2 = lessThanEqual($2, $3)
   44. merge_loop_mask                LoopMask &= $2
   45. stack_rewind
   46. branch_if_any_lanes_active     branch_if_any_lanes_active -14 (label 3 at #32)
   47. label                          label 0x00000001
   48. load_loop_mask                 LoopMask = $1
   49. load_return_mask               RetMask = $0
   50. copy_slot_unmasked             $0 = [fn].result
   51. label                          label 0x00000000
   52. copy_constant                  $1 = 0x42F60000 (123.0)
   53. copy_constant                  $2 = 0x43E40000 (456.0)
   54. swizzle_4                      $0..3 = ($0..3).yyzz
   55. copy_4_slots_unmasked          v = $0..3
   56. copy_4_slots_unmasked          v₁ = $0..3
   57. store_return_mask              $0 = RetMask
   58. copy_constant                  x = 0x00000001 (1.401298e-45)
   59. store_loop_mask                $1 = LoopMask
   60. jump                           jump +9 (label 6 at #69)
   61. label                          label 0x00000007
   62. copy_slot_unmasked             $2 = v₁(0)
   63. copy_slot_masked               [fn].result = Mask($2)
   64. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   65. copy_slot_unmasked             $2 = x
   66. copy_constant                  $3 = 0x00000001 (1.401298e-45)
   67. add_int                        $2 += $3
   68. copy_slot_masked               x = Mask($2)
   69. label                          label 0x00000006
   70. copy_slot_unmasked             $2 = x
   71. copy_constant                  $3 = 0x00000002 (2.802597e-45)
   72. cmple_int                      $2 = lessThanEqual($2, $3)
   73. merge_loop_mask                LoopMask &= $2
   74. stack_rewind
   75. branch_if_any_lanes_active     branch_if_any_lanes_active -14 (label 7 at #61)
   76. label                          label 0x00000005
   77. load_loop_mask                 LoopMask = $1
   78. load_return_mask               RetMask = $0
   79. copy_slot_unmasked             $0 = [fn].result
   80. label                          label 0x00000004
   81. copy_constant                  $1 = 0x42F60000 (123.0)
   82. copy_constant                  $2 = 0x43E40000 (456.0)
   83. swizzle_4                      $0..3 = ($0..3).yyzz
   84. copy_4_slots_unmasked          v = $0..3
   85. copy_constant                  $0 = 0x42F60000 (123.0)
   86. copy_constant                  $1 = 0x43E40000 (456.0)
   87. copy_constant                  $2 = 0x43E40000 (456.0)
   88. copy_4_slots_unmasked          v₁ = v
   89. store_return_mask              $3 = RetMask
   90. copy_constant                  x = 0x00000001 (1.401298e-45)
   91. store_loop_mask                $4 = LoopMask
   92. jump                           jump +9 (label 10 at #101)
   93. label                          label 0x0000000B
   94. copy_slot_unmasked             $5 = v₁(0)
   95. copy_slot_masked               [fn].result = Mask($5)
   96. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   97. copy_slot_unmasked             $5 = x
   98. copy_constant                  $6 = 0x00000001 (1.401298e-45)
   99. add_int                        $5 += $6
  100. copy_slot_masked               x = Mask($5)
  101. label                          label 0x0000000A
  102. copy_slot_unmasked             $5 = x
  103. copy_constant                  $6 = 0x00000002 (2.802597e-45)
  104. cmple_int                      $5 = lessThanEqual($5, $6)
  105. merge_loop_mask                LoopMask &= $5
  106. stack_rewind
  107. branch_if_any_lanes_active     branch_if_any_lanes_active -14 (label 11 at #93)
  108. label                          label 0x00000009
  109. load_loop_mask                 LoopMask = $4
  110. load_return_mask               RetMask = $3
  111. copy_slot_unmasked             $3 = [fn].result
  112. label                          label 0x00000008
  113. copy_4_slots_unmasked          v = $0..3
  114. copy_constant                  $0 = 0x42F60000 (123.0)
  115. copy_constant                  $1 = 0x43E40000 (456.0)
  116. copy_constant                  $2 = 0x43E40000 (456.0)
  117. copy_4_slots_unmasked          v₁ = v
  118. store_return_mask              $3 = RetMask
  119. copy_constant                  x = 0x00000001 (1.401298e-45)
  120. store_loop_mask                $4 = LoopMask
  121. jump                           jump +9 (label 14 at #130)
  122. label                          label 0x0000000F
  123. copy_slot_unmasked             $5 = v₁(0)
  124. copy_slot_masked               [fn].result = Mask($5)
  125. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  126. copy_slot_unmasked             $5 = x
  127. copy_constant                  $6 = 0x00000001 (1.401298e-45)
  128. add_int                        $5 += $6
  129. copy_slot_masked               x = Mask($5)
  130. label                          label 0x0000000E
  131. copy_slot_unmasked             $5 = x
  132. copy_constant                  $6 = 0x00000002 (2.802597e-45)
  133. cmple_int                      $5 = lessThanEqual($5, $6)
  134. merge_loop_mask                LoopMask &= $5
  135. stack_rewind
  136. branch_if_any_lanes_active     branch_if_any_lanes_active -14 (label 15 at #122)
  137. label                          label 0x0000000D
  138. load_loop_mask                 LoopMask = $4
  139. load_return_mask               RetMask = $3
  140. copy_slot_unmasked             $3 = [fn].result
  141. label                          label 0x0000000C
  142. copy_4_slots_unmasked          v = $0..3
  143. copy_4_slots_unmasked          v₁ = $0..3
  144. store_return_mask              $0 = RetMask
  145. copy_constant                  x = 0x00000001 (1.401298e-45)
  146. store_loop_mask                $1 = LoopMask
  147. jump                           jump +9 (label 18 at #156)
  148. label                          label 0x00000013
  149. copy_slot_unmasked             $2 = v₁(0)
  150. copy_slot_masked               [fn].result = Mask($2)
  151. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  152. copy_slot_unmasked             $2 = x
  153. copy_constant                  $3 = 0x00000001 (1.401298e-45)
  154. add_int                        $2 += $3
  155. copy_slot_masked               x = Mask($2)
  156. label                          label 0x00000012
  157. copy_slot_unmasked             $2 = x
  158. copy_constant                  $3 = 0x00000002 (2.802597e-45)
  159. cmple_int                      $2 = lessThanEqual($2, $3)
  160. merge_loop_mask                LoopMask &= $2
  161. stack_rewind
  162. branch_if_any_lanes_active     branch_if_any_lanes_active -14 (label 19 at #148)
  163. label                          label 0x00000011
  164. load_loop_mask                 LoopMask = $1
  165. load_return_mask               RetMask = $0
  166. copy_slot_unmasked             $0 = [fn].result
  167. label                          label 0x00000010
  168. copy_constant                  $1 = 0x42F60000 (123.0)
  169. copy_constant                  $2 = 0x43E40000 (456.0)
  170. swizzle_4                      $0..3 = ($0..3).yxxz
  171. copy_4_slots_unmasked          v = $0..3
  172. copy_4_slots_unmasked          v₁ = $0..3
  173. store_return_mask              $0 = RetMask
  174. copy_constant                  x = 0x00000001 (1.401298e-45)
  175. store_loop_mask                $1 = LoopMask
  176. jump                           jump +9 (label 22 at #185)
  177. label                          label 0x00000017
  178. copy_slot_unmasked             $2 = v₁(0)
  179. copy_slot_masked               [fn].result = Mask($2)
  180. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  181. copy_slot_unmasked             $2 = x
  182. copy_constant                  $3 = 0x00000001 (1.401298e-45)
  183. add_int                        $2 += $3
  184. copy_slot_masked               x = Mask($2)
  185. label                          label 0x00000016
  186. copy_slot_unmasked             $2 = x
  187. copy_constant                  $3 = 0x00000002 (2.802597e-45)
  188. cmple_int                      $2 = lessThanEqual($2, $3)
  189. merge_loop_mask                LoopMask &= $2
  190. stack_rewind
  191. branch_if_any_lanes_active     branch_if_any_lanes_active -14 (label 23 at #177)
  192. label                          label 0x00000015
  193. load_loop_mask                 LoopMask = $1
  194. load_return_mask               RetMask = $0
  195. copy_slot_unmasked             $0 = [fn].result
  196. label                          label 0x00000014
  197. copy_constant                  $1 = 0x42F60000 (123.0)
  198. copy_constant                  $2 = 0x43E40000 (456.0)
  199. swizzle_4                      $0..3 = ($0..3).yxxz
  200. copy_4_slots_unmasked          v = $0..3
  201. copy_constant                  $0 = 0x3F800000 (1.0)
  202. copy_constant                  $1 = 0x3F800000 (1.0)
  203. copy_constant                  $2 = 0x40000000 (2.0)
  204. copy_constant                  $3 = 0x40400000 (3.0)
  205. copy_4_slots_unmasked          v = $0..3
  206. copy_3_constants               $0..2 = colorRed(0..2)
  207. copy_constant                  $3 = 0x3F800000 (1.0)
  208. copy_4_slots_unmasked          v = $0..3
  209. copy_constant                  $0 = colorRed(0)
  210. copy_constant                  $1 = 0x3F800000 (1.0)
  211. copy_2_constants               $2..3 = colorRed(1..2)
  212. copy_4_slots_unmasked          v = $0..3
  213. swizzle_copy_4_slots_masked    (v).wzyx = Mask($0..3)
  214. copy_2_slots_unmasked          $0..1 = v(1..2)
  215. swizzle_copy_2_slots_masked    (v).xw = Mask($0..1)
  216. copy_4_slots_unmasked          $0..3 = v
  217. swizzle_2                      $0..1 = ($0..3).ww
  218. copy_constant                  $2 = 0x3F800000 (1.0)
  219. swizzle_copy_3_slots_masked    (v(0..2)).zyx = Mask($0..2)
  220. copy_4_slots_unmasked          $0..3 = v
  221. copy_constant                  $4 = 0x3F800000 (1.0)
  222. swizzle_4                      $4..7 = ($4..7).xxxx
  223. cmpeq_4_floats                 $0..3 = equal($0..3, $4..7)
  224. bitwise_and_2_ints             $0..1 &= $2..3
  225. bitwise_and_int                $0 &= $1
  226. swizzle_4                      $0..3 = ($0..3).xxxx
  227. copy_4_constants               $4..7 = colorRed
  228. copy_4_constants               $8..11 = colorGreen
  229. mix_4_ints                     $0..3 = mix($4..7, $8..11, $0..3)
  230. load_src                       src.rgba = $0..3

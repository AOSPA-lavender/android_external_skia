[immutable slots]
half4(3.0, 2.0, 2.0, 3.0)(0) = 0x40400000 (3.0)
half4(3.0, 2.0, 2.0, 3.0)(1) = 0x40000000 (2.0)
half4(3.0, 2.0, 2.0, 3.0)(2) = 0x40000000 (2.0)
half4(3.0, 2.0, 2.0, 3.0)(3) = 0x40400000 (3.0)
half4(-1.0, -1.0, -2.0, -2.0)(0) = 0xBF800000 (-1.0)
half4(-1.0, -1.0, -2.0, -2.0)(1) = 0xBF800000 (-1.0)
half4(-1.0, -1.0, -2.0, -2.0)(2) = 0xC0000000 (-2.0)
half4(-1.0, -1.0, -2.0, -2.0)(3) = 0xC0000000 (-2.0)
half4(2.0, 1.0, 1.0, 2.0)(0) = 0x40000000 (2.0)
half4(2.0, 1.0, 1.0, 2.0)(1) = 0x3F800000 (1.0)
half4(2.0, 1.0, 1.0, 2.0)(2) = 0x3F800000 (1.0)
half4(2.0, 1.0, 1.0, 2.0)(3) = 0x40000000 (2.0)
half4(9.0, 9.0, 9.0, 2.0)(0) = 0x41100000 (9.0)
half4(9.0, 9.0, 9.0, 2.0)(1) = 0x41100000 (9.0)
half4(9.0, 9.0, 9.0, 2.0)(2) = 0x41100000 (9.0)
half4(9.0, 9.0, 9.0, 2.0)(3) = 0x40000000 (2.0)
half4(18.0, 4.0, 9.0, 2.0)(0) = 0x41900000 (18.0)
half4(18.0, 4.0, 9.0, 2.0)(1) = 0x40800000 (4.0)
half4(18.0, 4.0, 9.0, 2.0)(2) = 0x41100000 (9.0)
half4(18.0, 4.0, 9.0, 2.0)(3) = 0x40000000 (2.0)
half4(0.0, 5.0, 5.0, 0.0)(0) = 0
half4(0.0, 5.0, 5.0, 0.0)(1) = 0x40A00000 (5.0)
half4(0.0, 5.0, 5.0, 0.0)(2) = 0x40A00000 (5.0)
half4(0.0, 5.0, 5.0, 0.0)(3) = 0
half4(9.0, 9.0, 10.0, 10.0)(0) = 0x41100000 (9.0)
half4(9.0, 9.0, 10.0, 10.0)(1) = 0x41100000 (9.0)
half4(9.0, 9.0, 10.0, 10.0)(2) = 0x41200000 (10.0)
half4(9.0, 9.0, 10.0, 10.0)(3) = 0x41200000 (10.0)
half4(1.0, 2.0, 1.0, 2.0)(0) = 0x3F800000 (1.0)
half4(1.0, 2.0, 1.0, 2.0)(1) = 0x40000000 (2.0)
half4(1.0, 2.0, 1.0, 2.0)(2) = 0x3F800000 (1.0)
half4(1.0, 2.0, 1.0, 2.0)(3) = 0x40000000 (2.0)
half4(8.0, 8.0, 8.0, 2.0)(0) = 0x41000000 (8.0)
half4(8.0, 8.0, 8.0, 2.0)(1) = 0x41000000 (8.0)
half4(8.0, 8.0, 8.0, 2.0)(2) = 0x41000000 (8.0)
half4(8.0, 8.0, 8.0, 2.0)(3) = 0x40000000 (2.0)
half4(4.0, 16.0, 8.0, 2.0)(0) = 0x40800000 (4.0)
half4(4.0, 16.0, 8.0, 2.0)(1) = 0x41800000 (16.0)
half4(4.0, 16.0, 8.0, 2.0)(2) = 0x41000000 (8.0)
half4(4.0, 16.0, 8.0, 2.0)(3) = 0x40000000 (2.0)
half4(2.0, 8.0, 16.0, 4.0)(0) = 0x40000000 (2.0)
half4(2.0, 8.0, 16.0, 4.0)(1) = 0x41000000 (8.0)
half4(2.0, 8.0, 16.0, 4.0)(2) = 0x41800000 (16.0)
half4(2.0, 8.0, 16.0, 4.0)(3) = 0x40800000 (4.0)
int4(3, 2, 2, 3)(0) = 0x00000003 (4.203895e-45)
int4(3, 2, 2, 3)(1) = 0x00000002 (2.802597e-45)
int4(3, 2, 2, 3)(2) = 0x00000002 (2.802597e-45)
int4(3, 2, 2, 3)(3) = 0x00000003 (4.203895e-45)
int4(-1, -1, -2, -2)(0) = 0xFFFFFFFF
int4(-1, -1, -2, -2)(1) = 0xFFFFFFFF
int4(-1, -1, -2, -2)(2) = 0xFFFFFFFE
int4(-1, -1, -2, -2)(3) = 0xFFFFFFFE
int4(2, 1, 1, 2)(0) = 0x00000002 (2.802597e-45)
int4(2, 1, 1, 2)(1) = 0x00000001 (1.401298e-45)
int4(2, 1, 1, 2)(2) = 0x00000001 (1.401298e-45)
int4(2, 1, 1, 2)(3) = 0x00000002 (2.802597e-45)
int4(9, 9, 9, 2)(0) = 0x00000009 (1.261169e-44)
int4(9, 9, 9, 2)(1) = 0x00000009 (1.261169e-44)
int4(9, 9, 9, 2)(2) = 0x00000009 (1.261169e-44)
int4(9, 9, 9, 2)(3) = 0x00000002 (2.802597e-45)
int4(2, 0, 9, 2)(0) = 0x00000002 (2.802597e-45)
int4(2, 0, 9, 2)(1) = 0
int4(2, 0, 9, 2)(2) = 0x00000009 (1.261169e-44)
int4(2, 0, 9, 2)(3) = 0x00000002 (2.802597e-45)
int4(0, 5, 5, 0)(0) = 0
int4(0, 5, 5, 0)(1) = 0x00000005 (7.006492e-45)
int4(0, 5, 5, 0)(2) = 0x00000005 (7.006492e-45)
int4(0, 5, 5, 0)(3) = 0
int4(9, 9, 10, 10)(0) = 0x00000009 (1.261169e-44)
int4(9, 9, 10, 10)(1) = 0x00000009 (1.261169e-44)
int4(9, 9, 10, 10)(2) = 0x0000000A (1.401298e-44)
int4(9, 9, 10, 10)(3) = 0x0000000A (1.401298e-44)
int4(1, 2, 1, 2)(0) = 0x00000001 (1.401298e-45)
int4(1, 2, 1, 2)(1) = 0x00000002 (2.802597e-45)
int4(1, 2, 1, 2)(2) = 0x00000001 (1.401298e-45)
int4(1, 2, 1, 2)(3) = 0x00000002 (2.802597e-45)
int4(8, 8, 8, 2)(0) = 0x00000008 (1.121039e-44)
int4(8, 8, 8, 2)(1) = 0x00000008 (1.121039e-44)
int4(8, 8, 8, 2)(2) = 0x00000008 (1.121039e-44)
int4(8, 8, 8, 2)(3) = 0x00000002 (2.802597e-45)
int4(4, 18, 8, 2)(0) = 0x00000004 (5.605194e-45)
int4(4, 18, 8, 2)(1) = 0x00000012 (2.522337e-44)
int4(4, 18, 8, 2)(2) = 0x00000008 (1.121039e-44)
int4(4, 18, 8, 2)(3) = 0x00000002 (2.802597e-45)
int4(2, 9, 18, 4)(0) = 0x00000002 (2.802597e-45)
int4(2, 9, 18, 4)(1) = 0x00000009 (1.261169e-44)
int4(2, 9, 18, 4)(2) = 0x00000012 (2.522337e-44)
int4(2, 9, 18, 4)(3) = 0x00000004 (5.605194e-45)

store_src_rg                   coords = src.rg
init_lane_masks                CondMask = LoopMask = RetMask = true
copy_constant                  _0_ok = 0xFFFFFFFF
copy_4_uniforms                _1_inputRed = colorRed
copy_4_uniforms                _2_inputGreen = colorGreen
copy_4_slots_unmasked          $0..3 = _1_inputRed
splat_4_constants              $4..7 = 0x40000000 (2.0)
add_4_floats                   $0..3 += $4..7
copy_4_slots_unmasked          _3_x = $0..3
copy_slot_unmasked             $0 = _0_ok
copy_4_slots_unmasked          $1..4 = _3_x
copy_4_slots_unmasked          $5..8 = half4(3.0, 2.0, 2.0, 3.0)
cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
bitwise_and_2_ints             $1..2 &= $3..4
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
copy_slot_unmasked             _0_ok = $0
copy_4_slots_unmasked          $0..3 = _2_inputGreen
swizzle_4                      $0..3 = ($0..3).ywxz
splat_4_constants              $4..7 = 0x40000000 (2.0)
sub_4_floats                   $0..3 -= $4..7
copy_4_slots_unmasked          _3_x = $0..3
copy_slot_unmasked             $0 = _0_ok
copy_4_slots_unmasked          $1..4 = _3_x
copy_4_slots_unmasked          $5..8 = half4(-1.0, -1.0, -2.0, -2.0)
cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
bitwise_and_2_ints             $1..2 &= $3..4
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
copy_slot_unmasked             _0_ok = $0
copy_4_slots_unmasked          $0..3 = _1_inputRed
copy_slot_unmasked             $4 = _2_inputGreen(1)
swizzle_4                      $4..7 = ($4..7).xxxx
add_4_floats                   $0..3 += $4..7
copy_4_slots_unmasked          _3_x = $0..3
copy_slot_unmasked             $0 = _0_ok
copy_4_slots_unmasked          $1..4 = _3_x
copy_4_slots_unmasked          $5..8 = half4(2.0, 1.0, 1.0, 2.0)
cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
bitwise_and_2_ints             $1..2 &= $3..4
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
copy_slot_unmasked             _0_ok = $0
copy_4_slots_unmasked          $0..3 = _2_inputGreen
swizzle_3                      $0..2 = ($0..3).wyw
splat_3_constants              $3..5 = 0x41100000 (9.0)
mul_3_floats                   $0..2 *= $3..5
copy_3_slots_unmasked          _3_x(0..2) = $0..2
copy_slot_unmasked             $0 = _0_ok
copy_4_slots_unmasked          $1..4 = _3_x
copy_4_slots_unmasked          $5..8 = half4(9.0, 9.0, 9.0, 2.0)
cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
bitwise_and_2_ints             $1..2 &= $3..4
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
copy_slot_unmasked             _0_ok = $0
copy_2_slots_unmasked          $0..1 = _3_x(2..3)
splat_2_constants              $2..3 = 0x40000000 (2.0)
mul_2_floats                   $0..1 *= $2..3
copy_2_slots_unmasked          _3_x(0..1) = $0..1
copy_slot_unmasked             $0 = _0_ok
copy_4_slots_unmasked          $1..4 = _3_x
copy_4_slots_unmasked          $5..8 = half4(18.0, 4.0, 9.0, 2.0)
cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
bitwise_and_2_ints             $1..2 &= $3..4
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
copy_slot_unmasked             _0_ok = $0
copy_4_slots_unmasked          $0..3 = _1_inputRed
splat_4_constants              $4..7 = 0x40A00000 (5.0)
mul_4_floats                   $0..3 *= $4..7
swizzle_4                      $0..3 = ($0..3).yxwz
copy_4_slots_unmasked          _3_x = $0..3
copy_slot_unmasked             $0 = _0_ok
copy_4_slots_unmasked          $1..4 = _3_x
copy_4_slots_unmasked          $5..8 = half4(0.0, 5.0, 5.0, 0.0)
cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
bitwise_and_2_ints             $1..2 &= $3..4
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
copy_slot_unmasked             _0_ok = $0
copy_4_slots_unmasked          $0..3 = _1_inputRed
splat_4_constants              $4..7 = 0x40000000 (2.0)
add_4_floats                   $0..3 += $4..7
copy_4_slots_unmasked          _3_x = $0..3
copy_slot_unmasked             $0 = _0_ok
copy_4_slots_unmasked          $1..4 = _3_x
copy_4_slots_unmasked          $5..8 = half4(3.0, 2.0, 2.0, 3.0)
cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
bitwise_and_2_ints             $1..2 &= $3..4
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
copy_slot_unmasked             _0_ok = $0
splat_4_constants              $0..3 = 0x41200000 (10.0)
copy_4_slots_unmasked          $4..7 = _2_inputGreen
swizzle_4                      $4..7 = ($4..7).ywxz
sub_4_floats                   $0..3 -= $4..7
copy_4_slots_unmasked          _3_x = $0..3
copy_slot_unmasked             $0 = _0_ok
copy_4_slots_unmasked          $1..4 = _3_x
copy_4_slots_unmasked          $5..8 = half4(9.0, 9.0, 10.0, 10.0)
cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
bitwise_and_2_ints             $1..2 &= $3..4
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
copy_slot_unmasked             _0_ok = $0
copy_slot_unmasked             $0 = _1_inputRed(0)
swizzle_4                      $0..3 = ($0..3).xxxx
copy_4_slots_unmasked          $4..7 = _2_inputGreen
add_4_floats                   $0..3 += $4..7
copy_4_slots_unmasked          _3_x = $0..3
copy_slot_unmasked             $0 = _0_ok
copy_4_slots_unmasked          $1..4 = _3_x
copy_4_slots_unmasked          $5..8 = half4(1.0, 2.0, 1.0, 2.0)
cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
bitwise_and_2_ints             $1..2 &= $3..4
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
copy_slot_unmasked             _0_ok = $0
copy_4_slots_unmasked          $0..3 = _2_inputGreen
swizzle_3                      $0..2 = ($0..3).wyw
splat_3_constants              $3..5 = 0x41000000 (8.0)
mul_3_floats                   $0..2 *= $3..5
copy_3_slots_unmasked          _3_x(0..2) = $0..2
copy_slot_unmasked             $0 = _0_ok
copy_4_slots_unmasked          $1..4 = _3_x
copy_4_slots_unmasked          $5..8 = half4(8.0, 8.0, 8.0, 2.0)
cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
bitwise_and_2_ints             $1..2 &= $3..4
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
copy_slot_unmasked             _0_ok = $0
splat_2_constants              $0..1 = 0x42000000 (32.0)
copy_2_slots_unmasked          $2..3 = _3_x(2..3)
div_2_floats                   $0..1 /= $2..3
copy_2_slots_unmasked          _3_x(0..1) = $0..1
copy_slot_unmasked             $0 = _0_ok
copy_4_slots_unmasked          $1..4 = _3_x
copy_4_slots_unmasked          $5..8 = half4(4.0, 16.0, 8.0, 2.0)
cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
bitwise_and_2_ints             $1..2 &= $3..4
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
copy_slot_unmasked             _0_ok = $0
splat_4_constants              $0..3 = 0x42000000 (32.0)
copy_4_slots_unmasked          $4..7 = _3_x
div_4_floats                   $0..3 /= $4..7
swizzle_4                      $0..3 = ($0..3).yxwz
copy_4_slots_unmasked          _3_x = $0..3
copy_slot_unmasked             $0 = _0_ok
copy_4_slots_unmasked          $1..4 = _3_x
copy_4_slots_unmasked          $5..8 = half4(2.0, 8.0, 16.0, 4.0)
cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
bitwise_and_2_ints             $1..2 &= $3..4
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
copy_slot_unmasked             _0_ok = $0
copy_4_slots_unmasked          $0..3 = _3_x
splat_4_constants              $4..7 = 0x40000000 (2.0)
add_4_floats                   $0..3 += $4..7
copy_4_slots_unmasked          _3_x = $0..3
splat_4_constants              $4..7 = 0x40000000 (2.0)
mul_4_floats                   $0..3 *= $4..7
copy_4_slots_unmasked          _3_x = $0..3
splat_4_constants              $4..7 = 0x40800000 (4.0)
sub_4_floats                   $0..3 -= $4..7
copy_4_slots_unmasked          _3_x = $0..3
splat_4_constants              $4..7 = 0x3F000000 (0.5)
mul_4_floats                   $0..3 *= $4..7
copy_4_slots_unmasked          _3_x = $0..3
copy_slot_unmasked             $0 = _0_ok
copy_4_slots_unmasked          $1..4 = _3_x
copy_4_slots_unmasked          $5..8 = half4(2.0, 8.0, 16.0, 4.0)
cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
bitwise_and_2_ints             $1..2 &= $3..4
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
copy_slot_unmasked             _0_ok = $0
copy_4_slots_unmasked          $0..3 = _3_x
splat_4_constants              $4..7 = 0x40000000 (2.0)
add_4_floats                   $0..3 += $4..7
copy_4_slots_unmasked          _3_x = $0..3
splat_4_constants              $4..7 = 0x40000000 (2.0)
mul_4_floats                   $0..3 *= $4..7
copy_4_slots_unmasked          _3_x = $0..3
splat_4_constants              $4..7 = 0x40800000 (4.0)
sub_4_floats                   $0..3 -= $4..7
copy_4_slots_unmasked          _3_x = $0..3
splat_4_constants              $4..7 = 0x3F000000 (0.5)
mul_4_floats                   $0..3 *= $4..7
copy_4_slots_unmasked          _3_x = $0..3
copy_slot_unmasked             $0 = _0_ok
copy_4_slots_unmasked          $1..4 = _3_x
copy_4_slots_unmasked          $5..8 = half4(2.0, 8.0, 16.0, 4.0)
cmpeq_4_floats                 $1..4 = equal($1..4, $5..8)
bitwise_and_2_ints             $1..2 &= $3..4
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
copy_slot_unmasked             _0_ok = $0
store_condition_mask           $12 = CondMask
copy_slot_unmasked             $13 = _0_ok
copy_constant                  $0 = 0
merge_condition_mask           CondMask = $12 & $13
branch_if_no_lanes_active      branch_if_no_lanes_active +204 (label 1 at #408)
copy_constant                  ok = 0xFFFFFFFF
copy_4_uniforms                $1..4 = colorRed
cast_to_int_from_4_floats      $1..4 = FloatToInt($1..4)
copy_4_slots_unmasked          inputRed = $1..4
copy_4_uniforms                $1..4 = colorGreen
cast_to_int_from_4_floats      $1..4 = FloatToInt($1..4)
copy_4_slots_unmasked          inputGreen = $1..4
copy_4_slots_unmasked          $1..4 = inputRed
splat_4_constants              $5..8 = 0x00000002 (2.802597e-45)
add_4_ints                     $1..4 += $5..8
copy_4_slots_unmasked          x = $1..4
copy_slot_unmasked             $1 = ok
copy_4_slots_unmasked          $2..5 = x
copy_4_slots_unmasked          $6..9 = int4(3, 2, 2, 3)
cmpeq_4_ints                   $2..5 = equal($2..5, $6..9)
bitwise_and_2_ints             $2..3 &= $4..5
bitwise_and_int                $2 &= $3
bitwise_and_int                $1 &= $2
copy_slot_masked               ok = Mask($1)
copy_4_slots_unmasked          $1..4 = inputGreen
swizzle_4                      $1..4 = ($1..4).ywxz
splat_4_constants              $5..8 = 0x00000002 (2.802597e-45)
sub_4_ints                     $1..4 -= $5..8
copy_4_slots_masked            x = Mask($1..4)
copy_slot_unmasked             $1 = ok
copy_4_slots_unmasked          $2..5 = x
copy_4_slots_unmasked          $6..9 = int4(-1, -1, -2, -2)
cmpeq_4_ints                   $2..5 = equal($2..5, $6..9)
bitwise_and_2_ints             $2..3 &= $4..5
bitwise_and_int                $2 &= $3
bitwise_and_int                $1 &= $2
copy_slot_masked               ok = Mask($1)
copy_4_slots_unmasked          $1..4 = inputRed
copy_slot_unmasked             $5 = inputGreen(1)
swizzle_4                      $5..8 = ($5..8).xxxx
add_4_ints                     $1..4 += $5..8
copy_4_slots_masked            x = Mask($1..4)
copy_slot_unmasked             $1 = ok
copy_4_slots_unmasked          $2..5 = x
copy_4_slots_unmasked          $6..9 = int4(2, 1, 1, 2)
cmpeq_4_ints                   $2..5 = equal($2..5, $6..9)
bitwise_and_2_ints             $2..3 &= $4..5
bitwise_and_int                $2 &= $3
bitwise_and_int                $1 &= $2
copy_slot_masked               ok = Mask($1)
copy_4_slots_unmasked          $1..4 = inputGreen
swizzle_3                      $1..3 = ($1..4).wyw
splat_3_constants              $4..6 = 0x00000009 (1.261169e-44)
mul_3_ints                     $1..3 *= $4..6
copy_3_slots_masked            x(0..2) = Mask($1..3)
copy_slot_unmasked             $1 = ok
copy_4_slots_unmasked          $2..5 = x
copy_4_slots_unmasked          $6..9 = int4(9, 9, 9, 2)
cmpeq_4_ints                   $2..5 = equal($2..5, $6..9)
bitwise_and_2_ints             $2..3 &= $4..5
bitwise_and_int                $2 &= $3
bitwise_and_int                $1 &= $2
copy_slot_masked               ok = Mask($1)
copy_2_slots_unmasked          $1..2 = x(2..3)
splat_2_constants              $3..4 = 0x00000004 (5.605194e-45)
div_2_ints                     $1..2 /= $3..4
copy_2_slots_masked            x(0..1) = Mask($1..2)
copy_slot_unmasked             $1 = ok
copy_4_slots_unmasked          $2..5 = x
copy_4_slots_unmasked          $6..9 = int4(2, 0, 9, 2)
cmpeq_4_ints                   $2..5 = equal($2..5, $6..9)
bitwise_and_2_ints             $2..3 &= $4..5
bitwise_and_int                $2 &= $3
bitwise_and_int                $1 &= $2
copy_slot_masked               ok = Mask($1)
copy_4_slots_unmasked          $1..4 = inputRed
splat_4_constants              $5..8 = 0x00000005 (7.006492e-45)
mul_4_ints                     $1..4 *= $5..8
swizzle_4                      $1..4 = ($1..4).yxwz
copy_4_slots_masked            x = Mask($1..4)
copy_slot_unmasked             $1 = ok
copy_4_slots_unmasked          $2..5 = x
copy_4_slots_unmasked          $6..9 = int4(0, 5, 5, 0)
cmpeq_4_ints                   $2..5 = equal($2..5, $6..9)
bitwise_and_2_ints             $2..3 &= $4..5
bitwise_and_int                $2 &= $3
bitwise_and_int                $1 &= $2
copy_slot_masked               ok = Mask($1)
copy_4_slots_unmasked          $1..4 = inputRed
splat_4_constants              $5..8 = 0x00000002 (2.802597e-45)
add_4_ints                     $1..4 += $5..8
copy_4_slots_masked            x = Mask($1..4)
copy_slot_unmasked             $1 = ok
copy_4_slots_unmasked          $2..5 = x
copy_4_slots_unmasked          $6..9 = int4(3, 2, 2, 3)
cmpeq_4_ints                   $2..5 = equal($2..5, $6..9)
bitwise_and_2_ints             $2..3 &= $4..5
bitwise_and_int                $2 &= $3
bitwise_and_int                $1 &= $2
copy_slot_masked               ok = Mask($1)
splat_4_constants              $1..4 = 0x0000000A (1.401298e-44)
copy_4_slots_unmasked          $5..8 = inputGreen
swizzle_4                      $5..8 = ($5..8).ywxz
sub_4_ints                     $1..4 -= $5..8
copy_4_slots_masked            x = Mask($1..4)
copy_slot_unmasked             $1 = ok
copy_4_slots_unmasked          $2..5 = x
copy_4_slots_unmasked          $6..9 = int4(9, 9, 10, 10)
cmpeq_4_ints                   $2..5 = equal($2..5, $6..9)
bitwise_and_2_ints             $2..3 &= $4..5
bitwise_and_int                $2 &= $3
bitwise_and_int                $1 &= $2
copy_slot_masked               ok = Mask($1)
copy_slot_unmasked             $1 = inputRed(0)
swizzle_4                      $1..4 = ($1..4).xxxx
copy_4_slots_unmasked          $5..8 = inputGreen
add_4_ints                     $1..4 += $5..8
copy_4_slots_masked            x = Mask($1..4)
copy_slot_unmasked             $1 = ok
copy_4_slots_unmasked          $2..5 = x
copy_4_slots_unmasked          $6..9 = int4(1, 2, 1, 2)
cmpeq_4_ints                   $2..5 = equal($2..5, $6..9)
bitwise_and_2_ints             $2..3 &= $4..5
bitwise_and_int                $2 &= $3
bitwise_and_int                $1 &= $2
copy_slot_masked               ok = Mask($1)
copy_4_slots_unmasked          $1..4 = inputGreen
swizzle_3                      $1..3 = ($1..4).wyw
splat_3_constants              $4..6 = 0x00000008 (1.121039e-44)
mul_3_ints                     $1..3 *= $4..6
copy_3_slots_masked            x(0..2) = Mask($1..3)
copy_slot_unmasked             $1 = ok
copy_4_slots_unmasked          $2..5 = x
copy_4_slots_unmasked          $6..9 = int4(8, 8, 8, 2)
cmpeq_4_ints                   $2..5 = equal($2..5, $6..9)
bitwise_and_2_ints             $2..3 &= $4..5
bitwise_and_int                $2 &= $3
bitwise_and_int                $1 &= $2
copy_slot_masked               ok = Mask($1)
splat_2_constants              $1..2 = 0x00000024 (5.044674e-44)
copy_2_slots_unmasked          $3..4 = x(2..3)
div_2_ints                     $1..2 /= $3..4
copy_2_slots_masked            x(0..1) = Mask($1..2)
copy_slot_unmasked             $1 = ok
copy_4_slots_unmasked          $2..5 = x
copy_4_slots_unmasked          $6..9 = int4(4, 18, 8, 2)
cmpeq_4_ints                   $2..5 = equal($2..5, $6..9)
bitwise_and_2_ints             $2..3 &= $4..5
bitwise_and_int                $2 &= $3
bitwise_and_int                $1 &= $2
copy_slot_masked               ok = Mask($1)
splat_4_constants              $1..4 = 0x00000025 (5.184804e-44)
copy_4_slots_unmasked          $5..8 = x
div_4_ints                     $1..4 /= $5..8
swizzle_4                      $1..4 = ($1..4).yxwz
copy_4_slots_masked            x = Mask($1..4)
copy_slot_unmasked             $1 = ok
copy_4_slots_unmasked          $2..5 = x
copy_4_slots_unmasked          $6..9 = int4(2, 9, 18, 4)
cmpeq_4_ints                   $2..5 = equal($2..5, $6..9)
bitwise_and_2_ints             $2..3 &= $4..5
bitwise_and_int                $2 &= $3
bitwise_and_int                $1 &= $2
copy_slot_masked               ok = Mask($1)
copy_4_slots_unmasked          $1..4 = x
splat_4_constants              $5..8 = 0x00000002 (2.802597e-45)
add_4_ints                     $1..4 += $5..8
copy_4_slots_masked            x = Mask($1..4)
splat_4_constants              $5..8 = 0x00000002 (2.802597e-45)
mul_4_ints                     $1..4 *= $5..8
copy_4_slots_masked            x = Mask($1..4)
splat_4_constants              $5..8 = 0x00000004 (5.605194e-45)
sub_4_ints                     $1..4 -= $5..8
copy_4_slots_masked            x = Mask($1..4)
splat_4_constants              $5..8 = 0x00000002 (2.802597e-45)
div_4_ints                     $1..4 /= $5..8
copy_4_slots_masked            x = Mask($1..4)
copy_slot_unmasked             $1 = ok
copy_4_slots_unmasked          $2..5 = x
copy_4_slots_unmasked          $6..9 = int4(2, 9, 18, 4)
cmpeq_4_ints                   $2..5 = equal($2..5, $6..9)
bitwise_and_2_ints             $2..3 &= $4..5
bitwise_and_int                $2 &= $3
bitwise_and_int                $1 &= $2
copy_slot_masked               ok = Mask($1)
copy_4_slots_unmasked          $1..4 = x
splat_4_constants              $5..8 = 0x00000002 (2.802597e-45)
add_4_ints                     $1..4 += $5..8
copy_4_slots_masked            x = Mask($1..4)
splat_4_constants              $5..8 = 0x00000002 (2.802597e-45)
mul_4_ints                     $1..4 *= $5..8
copy_4_slots_masked            x = Mask($1..4)
splat_4_constants              $5..8 = 0x00000004 (5.605194e-45)
sub_4_ints                     $1..4 -= $5..8
copy_4_slots_masked            x = Mask($1..4)
splat_4_constants              $5..8 = 0x00000002 (2.802597e-45)
div_4_ints                     $1..4 /= $5..8
copy_4_slots_masked            x = Mask($1..4)
copy_slot_unmasked             $1 = ok
copy_4_slots_unmasked          $2..5 = x
copy_4_slots_unmasked          $6..9 = int4(2, 9, 18, 4)
cmpeq_4_ints                   $2..5 = equal($2..5, $6..9)
bitwise_and_2_ints             $2..3 &= $4..5
bitwise_and_int                $2 &= $3
bitwise_and_int                $1 &= $2
copy_slot_masked               ok = Mask($1)
label                          label 0x00000002
copy_slot_masked               $0 = Mask($1)
label                          label 0x00000001
load_condition_mask            CondMask = $12
swizzle_4                      $0..3 = ($0..3).xxxx
copy_4_uniforms                $4..7 = colorRed
copy_4_uniforms                $8..11 = colorGreen
mix_4_ints                     $0..3 = mix($4..7, $8..11, $0..3)
load_src                       src.rgba = $0..3

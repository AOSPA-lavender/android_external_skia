store_src_rg                   coords = src.rg
init_lane_masks                CondMask = LoopMask = RetMask = true
copy_uniform                   $0 = colorGreen(0)
cast_to_int_from_float         $0 = FloatToInt($0)
copy_slot_unmasked             zero = $0
copy_uniform                   $0 = colorGreen(1)
cast_to_int_from_float         $0 = FloatToInt($0)
copy_slot_unmasked             one = $0
copy_slot_unmasked             x = zero
store_loop_mask                $0 = LoopMask
jump                           jump +63 (label 1 at #74)
label                          label 0x00000002
copy_slot_unmasked             y = one
store_loop_mask                $1 = LoopMask
jump                           jump +46 (label 4 at #61)
label                          label 0x00000005
copy_slot_unmasked             _0_x = x
copy_constant                  _1_result = 0
store_loop_mask                $2 = LoopMask
jump                           jump +10 (label 7 at #30)
label                          label 0x00000008
copy_slot_unmasked             $3 = _1_result
copy_constant                  $4 = 0x00000001 (1.401298e-45)
add_int                        $3 += $4
copy_slot_masked               _1_result = Mask($3)
copy_slot_unmasked             $3 = _0_x
copy_slot_unmasked             $4 = y
sub_int                        $3 -= $4
copy_slot_masked               _0_x = Mask($3)
label                          label 0x00000007
copy_2_slots_unmasked          $3..4 = y, _0_x
cmple_int                      $3 = lessThanEqual($3, $4)
merge_loop_mask                LoopMask &= $3
stack_rewind
branch_if_any_lanes_active     branch_if_any_lanes_active -14 (label 8 at #21)
label                          label 0x00000006
load_loop_mask                 LoopMask = $2
store_condition_mask           $2 = CondMask
copy_2_slots_unmasked          $3..4 = x, y
div_int                        $3 /= $4
copy_slot_unmasked             $4 = _1_result
cmpne_int                      $3 = notEqual($3, $4)
merge_condition_mask           CondMask = $2 & $3
copy_constant                  $4 = 0x3F800000 (1.0)
copy_slot_unmasked             $5 = x
cast_to_float_from_int         $5 = IntToFloat($5)
copy_constant                  $6 = 0x3B808081 (0.003921569)
mul_float                      $5 *= $6
copy_slot_unmasked             $6 = y
cast_to_float_from_int         $6 = IntToFloat($6)
copy_constant                  $7 = 0x3B808081 (0.003921569)
mul_float                      $6 *= $7
copy_constant                  $7 = 0x3F800000 (1.0)
copy_4_slots_masked            [main].result = Mask($4..7)
mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
load_condition_mask            CondMask = $2
copy_slot_unmasked             $2 = y
copy_constant                  $3 = 0x00000001 (1.401298e-45)
add_int                        $2 += $3
copy_slot_masked               y = Mask($2)
label                          label 0x00000004
copy_slot_unmasked             $2 = y
copy_constant                  $3 = 0x00000064 (1.401298e-43)
cmplt_int                      $2 = lessThan($2, $3)
merge_loop_mask                LoopMask &= $2
stack_rewind
branch_if_any_lanes_active     branch_if_any_lanes_active -51 (label 5 at #16)
label                          label 0x00000003
load_loop_mask                 LoopMask = $1
copy_slot_unmasked             $1 = x
copy_constant                  $2 = 0x00000001 (1.401298e-45)
add_int                        $1 += $2
copy_slot_masked               x = Mask($1)
label                          label 0x00000001
copy_slot_unmasked             $1 = x
copy_constant                  $2 = 0x00000064 (1.401298e-43)
cmplt_int                      $1 = lessThan($1, $2)
merge_loop_mask                LoopMask &= $1
stack_rewind
branch_if_any_lanes_active     branch_if_any_lanes_active -68 (label 2 at #12)
label                          label 0
load_loop_mask                 LoopMask = $0
copy_4_uniforms                $0..3 = colorGreen
copy_4_slots_masked            [main].result = Mask($0..3)
mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
load_src                       src.rgba = [main].result

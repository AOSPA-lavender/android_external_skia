    1. store_src_rg                   coords = src.rg
    2. init_lane_masks                CondMask = LoopMask = RetMask = true
    3. store_condition_mask           $12 = CondMask
    4. branch_if_no_lanes_active      branch_if_no_lanes_active +67 (label 2 at #71)
    5. store_return_mask              $13 = RetMask
    6. copy_constant                  expected(0) = 0x40400000 (3.0)
    7. copy_constant                  expected(1) = 0x40000000 (2.0)
    8. copy_constant                  expected(2) = 0x3F800000 (1.0)
    9. zero_3_slots_unmasked          vec = 0
   10. zero_slot_unmasked             c = 0
   11. store_loop_mask                $14 = LoopMask
   12. jump                           jump +46 (label 4 at #58)
   13. label                          label 0x00000005
   14. branch_if_no_lanes_active      branch_if_no_lanes_active +24 (label 6 at #38)
   15. zero_slot_unmasked             r = 0
   16. label                          label 0x00000007
   17. copy_slot_unmasked             $23 = r
   18. copy_constant                  $27 = 0x00000002 (2.802597e-45)
   19. copy_constant                  $28 = 0x00000001 (1.401298e-45)
   20. zero_slot_unmasked             $29 = 0
   21. copy_from_indirect_unmasked    $22 = Indirect($27 + $23)
   22. copy_slot_unmasked             $27 = c
   23. copy_constant                  $28 = 0x00000003 (4.203895e-45)
   24. mul_int                        $27 *= $28
   25. copy_slot_unmasked             $23 = r
   26. copy_slot_unmasked             $24 = $27
   27. add_int                        $23 += $24
   28. copy_from_indirect_uniform_unm $15 = Indirect(testMatrix3x3(0) + $23)
   29. copy_to_indirect_masked        Indirect(vec(0) + $22) = Mask($15)
   30. copy_slot_unmasked             $15 = r
   31. copy_constant                  $16 = 0x00000001 (1.401298e-45)
   32. add_int                        $15 += $16
   33. copy_slot_masked               r = Mask($15)
   34. copy_constant                  $16 = 0x00000003 (4.203895e-45)
   35. cmplt_int                      $15 = lessThan($15, $16)
   36. stack_rewind
   37. branch_if_no_active_lanes_eq   branch -21 (label 7 at #16) if no lanes of $15 == 0x00000000 (0.0)
   38. label                          label 0x00000006
   39. store_condition_mask           $15 = CondMask
   40. copy_3_slots_unmasked          $16..18 = vec
   41. copy_3_slots_unmasked          $19..21 = expected
   42. cmpne_3_floats                 $16..18 = notEqual($16..18, $19..21)
   43. bitwise_or_int                 $17 |= $18
   44. bitwise_or_int                 $16 |= $17
   45. merge_condition_mask           CondMask = $15 & $16
   46. zero_slot_unmasked             $17 = 0
   47. copy_slot_masked               [test3x3].result = Mask($17)
   48. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   49. load_condition_mask            CondMask = $15
   50. copy_3_slots_unmasked          $15..17 = expected
   51. splat_3_constants              $18..20 = 0x40400000 (3.0)
   52. add_3_floats                   $15..17 += $18..20
   53. copy_3_slots_masked            expected = Mask($15..17)
   54. copy_slot_unmasked             $15 = c
   55. copy_constant                  $16 = 0x00000001 (1.401298e-45)
   56. add_int                        $15 += $16
   57. copy_slot_masked               c = Mask($15)
   58. label                          label 0x00000004
   59. copy_slot_unmasked             $15 = c
   60. copy_constant                  $16 = 0x00000003 (4.203895e-45)
   61. cmplt_int                      $15 = lessThan($15, $16)
   62. merge_loop_mask                LoopMask &= $15
   63. stack_rewind
   64. branch_if_any_lanes_active     branch_if_any_lanes_active -51 (label 5 at #13)
   65. label                          label 0x00000003
   66. load_loop_mask                 LoopMask = $14
   67. copy_constant                  $14 = 0xFFFFFFFF
   68. copy_slot_masked               [test3x3].result = Mask($14)
   69. load_return_mask               RetMask = $13
   70. copy_slot_unmasked             $13 = [test3x3].result
   71. label                          label 0x00000002
   72. zero_slot_unmasked             $0 = 0
   73. merge_condition_mask           CondMask = $12 & $13
   74. branch_if_no_lanes_active      branch_if_no_lanes_active +71 (label 1 at #145)
   75. store_return_mask              $1 = RetMask
   76. copy_constant                  expected₁(0) = 0x40800000 (4.0)
   77. copy_constant                  expected₁(1) = 0x40400000 (3.0)
   78. copy_constant                  expected₁(2) = 0x40000000 (2.0)
   79. copy_constant                  expected₁(3) = 0x3F800000 (1.0)
   80. zero_4_slots_unmasked          vec₁ = 0
   81. zero_slot_unmasked             c₁ = 0
   82. store_loop_mask                $2 = LoopMask
   83. jump                           jump +47 (label 10 at #130)
   84. label                          label 0x0000000B
   85. branch_if_no_lanes_active      branch_if_no_lanes_active +25 (label 12 at #110)
   86. zero_slot_unmasked             r₁ = 0
   87. label                          label 0x0000000D
   88. copy_slot_unmasked             $27 = r₁
   89. copy_constant                  $23 = 0x00000003 (4.203895e-45)
   90. copy_constant                  $24 = 0x00000002 (2.802597e-45)
   91. copy_constant                  $25 = 0x00000001 (1.401298e-45)
   92. zero_slot_unmasked             $26 = 0
   93. copy_from_indirect_unmasked    $22 = Indirect($23 + $27)
   94. copy_slot_unmasked             $23 = c₁
   95. copy_constant                  $24 = 0x00000004 (5.605194e-45)
   96. mul_int                        $23 *= $24
   97. copy_slot_unmasked             $27 = r₁
   98. copy_slot_unmasked             $28 = $23
   99. add_int                        $27 += $28
  100. copy_from_indirect_uniform_unm $3 = Indirect(testMatrix4x4(0) + $27)
  101. copy_to_indirect_masked        Indirect(vec₁(0) + $22) = Mask($3)
  102. copy_slot_unmasked             $3 = r₁
  103. copy_constant                  $4 = 0x00000001 (1.401298e-45)
  104. add_int                        $3 += $4
  105. copy_slot_masked               r₁ = Mask($3)
  106. copy_constant                  $4 = 0x00000004 (5.605194e-45)
  107. cmplt_int                      $3 = lessThan($3, $4)
  108. stack_rewind
  109. branch_if_no_active_lanes_eq   branch -22 (label 13 at #87) if no lanes of $3 == 0x00000000 (0.0)
  110. label                          label 0x0000000C
  111. store_condition_mask           $3 = CondMask
  112. copy_4_slots_unmasked          $4..7 = vec₁
  113. copy_4_slots_unmasked          $8..11 = expected₁
  114. cmpne_4_floats                 $4..7 = notEqual($4..7, $8..11)
  115. bitwise_or_2_ints              $4..5 |= $6..7
  116. bitwise_or_int                 $4 |= $5
  117. merge_condition_mask           CondMask = $3 & $4
  118. zero_slot_unmasked             $5 = 0
  119. copy_slot_masked               [test4x4].result = Mask($5)
  120. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
  121. load_condition_mask            CondMask = $3
  122. copy_4_slots_unmasked          $3..6 = expected₁
  123. splat_4_constants              $7..10 = 0x40800000 (4.0)
  124. add_4_floats                   $3..6 += $7..10
  125. copy_4_slots_masked            expected₁ = Mask($3..6)
  126. copy_slot_unmasked             $3 = c₁
  127. copy_constant                  $4 = 0x00000001 (1.401298e-45)
  128. add_int                        $3 += $4
  129. copy_slot_masked               c₁ = Mask($3)
  130. label                          label 0x0000000A
  131. copy_slot_unmasked             $3 = c₁
  132. copy_constant                  $4 = 0x00000004 (5.605194e-45)
  133. cmplt_int                      $3 = lessThan($3, $4)
  134. merge_loop_mask                LoopMask &= $3
  135. stack_rewind
  136. branch_if_any_lanes_active     branch_if_any_lanes_active -52 (label 11 at #84)
  137. label                          label 0x00000009
  138. load_loop_mask                 LoopMask = $2
  139. copy_constant                  $2 = 0xFFFFFFFF
  140. copy_slot_masked               [test4x4].result = Mask($2)
  141. load_return_mask               RetMask = $1
  142. copy_slot_unmasked             $1 = [test4x4].result
  143. label                          label 0x00000008
  144. copy_slot_masked               $0 = Mask($1)
  145. label                          label 0x00000001
  146. load_condition_mask            CondMask = $12
  147. swizzle_4                      $0..3 = ($0..3).xxxx
  148. copy_4_uniforms                $4..7 = colorRed
  149. copy_4_uniforms                $8..11 = colorGreen
  150. mix_4_ints                     $0..3 = mix($4..7, $8..11, $0..3)
  151. load_src                       src.rgba = $0..3

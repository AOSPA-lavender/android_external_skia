    1. store_src                      $26..29 = src.rgba
    2. copy_constant                  $28 = 0x3F000000 (0.5)
    3. copy_constant                  $29 = 0x3F000000 (0.5)
    4. cmpeq_2_floats                 $26..27 = equal($26..27, $28..29)
    5. bitwise_and_int                $26 &= $27
    6. store_src_rg                   pos = src.rg
    7. init_lane_masks                CondMask = LoopMask = RetMask = true
    8. zero_slot_unmasked             kZero = 0
    9. copy_constant                  kTen = 0x0000000A (1.401298e-44)
   10. copy_slot_unmasked             $2 = pos(0)
   11. copy_constant                  $3 = colorGreen(1)
   12. max_float                      $2 = max($2, $3)
   13. copy_constant                  $3 = colorGreen(3)
   14. min_float                      $2 = min($2, $3)
   15. cast_to_int_from_float         $2 = FloatToInt($2)
   16. copy_constant                  $3 = 0x00000005 (7.006492e-45)
   17. mul_int                        $2 *= $3
   18. copy_slot_unmasked             five = $2
   19. store_condition_mask           $40 = CondMask
   20. store_condition_mask           $50 = CondMask
   21. store_condition_mask           $30 = CondMask
   22. store_condition_mask           $76 = CondMask
   23. store_condition_mask           $60 = CondMask
   24. store_condition_mask           $20 = CondMask
   25. store_condition_mask           $70 = CondMask
   26. store_condition_mask           $14 = CondMask
   27. branch_if_no_lanes_active      branch_if_no_lanes_active +33 (label 9 at #60)
   28. store_return_mask              $15 = RetMask
   29. copy_slot_unmasked             five₁ = five
   30. copy_slot_unmasked             i = kZero
   31. store_loop_mask                $16 = LoopMask
   32. jump                           jump +15 (label 11 at #47)
   33. label                          label 0x0000000C
   34. store_condition_mask           $17 = CondMask
   35. copy_slot_unmasked             $18 = i
   36. copy_slot_unmasked             $19 = five₁
   37. cmpeq_int                      $18 = equal($18, $19)
   38. merge_condition_mask           CondMask = $17 & $18
   39. copy_slot_unmasked             $19 = i
   40. copy_slot_masked               [return_loop].result = Mask($19)
   41. mask_off_return_mask           RetMask &= ~(CondMask & LoopMask & RetMask)
   42. load_condition_mask            CondMask = $17
   43. copy_slot_unmasked             $17 = i
   44. copy_constant                  $18 = 0x00000001 (1.401298e-45)
   45. add_int                        $17 += $18
   46. copy_slot_masked               i = Mask($17)
   47. label                          label 0x0000000B
   48. copy_slot_unmasked             $17 = i
   49. copy_constant                  $18 = 0x0000000A (1.401298e-44)
   50. cmplt_int                      $17 = lessThan($17, $18)
   51. merge_loop_mask                LoopMask &= $17
   52. stack_rewind
   53. branch_if_any_lanes_active     branch_if_any_lanes_active -20 (label 12 at #33)
   54. label                          label 0x0000000A
   55. load_loop_mask                 LoopMask = $16
   56. zero_slot_unmasked             $16 = 0
   57. copy_slot_masked               [return_loop].result = Mask($16)
   58. load_return_mask               RetMask = $15
   59. copy_slot_unmasked             $15 = [return_loop].result
   60. label                          label 0x00000009
   61. copy_constant                  $16 = 0x00000005 (7.006492e-45)
   62. cmpeq_int                      $15 = equal($15, $16)
   63. zero_slot_unmasked             $71 = 0
   64. merge_condition_mask           CondMask = $14 & $15
   65. branch_if_no_lanes_active      branch_if_no_lanes_active +38 (label 8 at #103)
   66. copy_slot_unmasked             five₂ = five
   67. zero_2_slots_unmasked          sum, i₁ = 0
   68. store_loop_mask                $72 = LoopMask
   69. jump                           jump +20 (label 15 at #89)
   70. label                          label 0x00000010
   71. zero_slot_unmasked             $0 = 0
   72. store_condition_mask           $73 = CondMask
   73. copy_slot_unmasked             $74 = i₁
   74. copy_slot_unmasked             $75 = five₂
   75. cmplt_int                      $74 = lessThan($74, $75)
   76. merge_condition_mask           CondMask = $73 & $74
   77. copy_constant                  $1 = 0xFFFFFFFF
   78. copy_slot_masked               $0 = Mask($1)
   79. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
   80. load_condition_mask            CondMask = $73
   81. copy_2_slots_unmasked          $73..74 = sum, i₁
   82. add_int                        $73 += $74
   83. copy_slot_masked               sum = Mask($73)
   84. reenable_loop_mask             LoopMask |= $0
   85. copy_slot_unmasked             $73 = i₁
   86. copy_constant                  $74 = 0x00000001 (1.401298e-45)
   87. add_int                        $73 += $74
   88. copy_slot_masked               i₁ = Mask($73)
   89. label                          label 0x0000000F
   90. copy_slot_unmasked             $73 = i₁
   91. copy_slot_unmasked             $74 = kTen
   92. cmplt_int                      $73 = lessThan($73, $74)
   93. merge_loop_mask                LoopMask &= $73
   94. stack_rewind
   95. branch_if_any_lanes_active     branch_if_any_lanes_active -25 (label 16 at #70)
   96. label                          label 0x0000000E
   97. load_loop_mask                 LoopMask = $72
   98. copy_slot_unmasked             $72 = sum
   99. label                          label 0x0000000D
  100. copy_constant                  $73 = 0x00000023 (4.904545e-44)
  101. cmpeq_int                      $72 = equal($72, $73)
  102. copy_slot_masked               $71 = Mask($72)
  103. label                          label 0x00000008
  104. load_condition_mask            CondMask = $14
  105. zero_slot_unmasked             $21 = 0
  106. merge_condition_mask           CondMask = $70 & $71
  107. branch_if_no_lanes_active      branch_if_no_lanes_active +38 (label 7 at #145)
  108. copy_constant                  five₃ = 0x00000005 (7.006492e-45)
  109. zero_slot_unmasked             sum₁ = 0
  110. copy_constant                  kOne = 0x00000001 (1.401298e-45)
  111. zero_slot_unmasked             i₂ = 0
  112. store_loop_mask                $22 = LoopMask
  113. jump                           jump +18 (label 19 at #131)
  114. label                          label 0x00000014
  115. store_condition_mask           $23 = CondMask
  116. copy_slot_unmasked             $24 = five₃
  117. copy_slot_unmasked             $25 = i₂
  118. cmplt_int                      $24 = lessThan($24, $25)
  119. merge_condition_mask           CondMask = $23 & $24
  120. branch_if_all_lanes_active     branch_if_all_lanes_active +18 (label 18 at #138)
  121. mask_off_loop_mask             LoopMask &= ~(CondMask & LoopMask & RetMask)
  122. load_condition_mask            CondMask = $23
  123. copy_slot_unmasked             $23 = sum₁
  124. copy_slot_unmasked             $24 = i₂
  125. add_int                        $23 += $24
  126. copy_slot_masked               sum₁ = Mask($23)
  127. copy_slot_unmasked             $23 = i₂
  128. copy_slot_unmasked             $24 = kOne
  129. add_int                        $23 += $24
  130. copy_slot_masked               i₂ = Mask($23)
  131. label                          label 0x00000013
  132. copy_slot_unmasked             $23 = i₂
  133. copy_constant                  $24 = 0x0000000A (1.401298e-44)
  134. cmplt_int                      $23 = lessThan($23, $24)
  135. merge_loop_mask                LoopMask &= $23
  136. stack_rewind
  137. branch_if_any_lanes_active     branch_if_any_lanes_active -23 (label 20 at #114)
  138. label                          label 0x00000012
  139. load_loop_mask                 LoopMask = $22
  140. copy_slot_unmasked             $22 = sum₁
  141. label                          label 0x00000011
  142. copy_constant                  $23 = 0x0000000F (2.101948e-44)
  143. cmpeq_int                      $22 = equal($22, $23)
  144. copy_slot_masked               $21 = Mask($22)
  145. label                          label 0x00000007
  146. load_condition_mask            CondMask = $70
  147. zero_slot_unmasked             $61 = 0
  148. merge_condition_mask           CondMask = $20 & $21
  149. branch_if_no_lanes_active      branch_if_no_lanes_active +28 (label 6 at #177)
  150. copy_constant                  $62 = 0x00000009 (1.261169e-44)
  151. swizzle_4                      $62..65 = ($62..65).xxxx
  152. copy_4_slots_unmasked          result = $62..65
  153. branch_if_no_lanes_active      branch_if_no_lanes_active +13 (label 22 at #166)
  154. copy_constant                  i₃ = 0x00000001 (1.401298e-45)
  155. label                          label 0x00000017
  156. copy_4_slots_unmasked          $62..65 = result(1..3), i₃
  157. copy_4_slots_masked            result = Mask($62..65)
  158. copy_slot_unmasked             $62 = i₃
  159. copy_constant                  $63 = 0x00000001 (1.401298e-45)
  160. add_int                        $62 += $63
  161. copy_slot_masked               i₃ = Mask($62)
  162. copy_constant                  $63 = 0x00000003 (4.203895e-45)
  163. cmple_int                      $62 = lessThanEqual($62, $63)
  164. stack_rewind
  165. branch_if_no_active_lanes_eq   branch -10 (label 23 at #155) if no lanes of $62 == 0x00000000 (0.0)
  166. label                          label 0x00000016
  167. copy_4_slots_unmasked          $62..65 = result
  168. copy_constant                  $66 = 0x00000009 (1.261169e-44)
  169. copy_constant                  $67 = 0x00000001 (1.401298e-45)
  170. copy_constant                  $68 = 0x00000002 (2.802597e-45)
  171. copy_constant                  $69 = 0x00000003 (4.203895e-45)
  172. cmpeq_4_ints                   $62..65 = equal($62..65, $66..69)
  173. bitwise_and_2_ints             $62..63 &= $64..65
  174. bitwise_and_int                $62 &= $63
  175. label                          label 0x00000015
  176. copy_slot_masked               $61 = Mask($62)
  177. label                          label 0x00000006
  178. load_condition_mask            CondMask = $20
  179. zero_slot_unmasked             $77 = 0
  180. merge_condition_mask           CondMask = $60 & $61
  181. branch_if_no_lanes_active      branch_if_no_lanes_active +28 (label 5 at #209)
  182. copy_constant                  $78 = 0x00000009 (1.261169e-44)
  183. swizzle_4                      $78..81 = ($78..81).xxxx
  184. copy_4_slots_unmasked          result₁ = $78..81
  185. branch_if_no_lanes_active      branch_if_no_lanes_active +13 (label 25 at #198)
  186. copy_constant                  i₄ = 0x00000001 (1.401298e-45)
  187. label                          label 0x0000001A
  188. copy_4_slots_unmasked          $78..81 = result₁(1..3), i₄
  189. copy_4_slots_masked            result₁ = Mask($78..81)
  190. copy_slot_unmasked             $78 = i₄
  191. copy_constant                  $79 = 0x00000001 (1.401298e-45)
  192. add_int                        $78 += $79
  193. copy_slot_masked               i₄ = Mask($78)
  194. copy_constant                  $79 = 0x00000004 (5.605194e-45)
  195. cmplt_int                      $78 = lessThan($78, $79)
  196. stack_rewind
  197. branch_if_no_active_lanes_eq   branch -10 (label 26 at #187) if no lanes of $78 == 0x00000000 (0.0)
  198. label                          label 0x00000019
  199. copy_4_slots_unmasked          $78..81 = result₁
  200. copy_constant                  $82 = 0x00000009 (1.261169e-44)
  201. copy_constant                  $83 = 0x00000001 (1.401298e-45)
  202. copy_constant                  $84 = 0x00000002 (2.802597e-45)
  203. copy_constant                  $85 = 0x00000003 (4.203895e-45)
  204. cmpeq_4_ints                   $78..81 = equal($78..81, $82..85)
  205. bitwise_and_2_ints             $78..79 &= $80..81
  206. bitwise_and_int                $78 &= $79
  207. label                          label 0x00000018
  208. copy_slot_masked               $77 = Mask($78)
  209. label                          label 0x00000005
  210. load_condition_mask            CondMask = $60
  211. zero_slot_unmasked             $31 = 0
  212. merge_condition_mask           CondMask = $76 & $77
  213. branch_if_no_lanes_active      branch_if_no_lanes_active +29 (label 4 at #242)
  214. copy_constant                  $32 = 0x00000009 (1.261169e-44)
  215. swizzle_4                      $32..35 = ($32..35).xxxx
  216. copy_4_slots_unmasked          result₂ = $32..35
  217. branch_if_no_lanes_active      branch_if_no_lanes_active +14 (label 28 at #231)
  218. copy_constant                  i₅ = 0x00000003 (4.203895e-45)
  219. label                          label 0x0000001D
  220. copy_4_slots_unmasked          $32..35 = result₂(1..3), i₅
  221. copy_4_slots_masked            result₂ = Mask($32..35)
  222. copy_slot_unmasked             $32 = i₅
  223. copy_constant                  $33 = 0x00000001 (1.401298e-45)
  224. sub_int                        $32 -= $33
  225. copy_slot_masked               i₅ = Mask($32)
  226. copy_constant                  $32 = 0x00000001 (1.401298e-45)
  227. copy_slot_unmasked             $33 = i₅
  228. cmple_int                      $32 = lessThanEqual($32, $33)
  229. stack_rewind
  230. branch_if_no_active_lanes_eq   branch -11 (label 29 at #219) if no lanes of $32 == 0x00000000 (0.0)
  231. label                          label 0x0000001C
  232. copy_4_slots_unmasked          $32..35 = result₂
  233. copy_constant                  $36 = 0x00000009 (1.261169e-44)
  234. copy_constant                  $37 = 0x00000003 (4.203895e-45)
  235. copy_constant                  $38 = 0x00000002 (2.802597e-45)
  236. copy_constant                  $39 = 0x00000001 (1.401298e-45)
  237. cmpeq_4_ints                   $32..35 = equal($32..35, $36..39)
  238. bitwise_and_2_ints             $32..33 &= $34..35
  239. bitwise_and_int                $32 &= $33
  240. label                          label 0x0000001B
  241. copy_slot_masked               $31 = Mask($32)
  242. label                          label 0x00000004
  243. load_condition_mask            CondMask = $76
  244. zero_slot_unmasked             $51 = 0
  245. merge_condition_mask           CondMask = $30 & $31
  246. branch_if_no_lanes_active      branch_if_no_lanes_active +29 (label 3 at #275)
  247. copy_constant                  $52 = 0x00000009 (1.261169e-44)
  248. swizzle_4                      $52..55 = ($52..55).xxxx
  249. copy_4_slots_unmasked          result₃ = $52..55
  250. branch_if_no_lanes_active      branch_if_no_lanes_active +14 (label 31 at #264)
  251. copy_constant                  i₆ = 0x00000003 (4.203895e-45)
  252. label                          label 0x00000020
  253. copy_4_slots_unmasked          $52..55 = result₃(1..3), i₆
  254. copy_4_slots_masked            result₃ = Mask($52..55)
  255. copy_slot_unmasked             $52 = i₆
  256. copy_constant                  $53 = 0x00000001 (1.401298e-45)
  257. sub_int                        $52 -= $53
  258. copy_slot_masked               i₆ = Mask($52)
  259. zero_slot_unmasked             $52 = 0
  260. copy_slot_unmasked             $53 = i₆
  261. cmplt_int                      $52 = lessThan($52, $53)
  262. stack_rewind
  263. branch_if_no_active_lanes_eq   branch -11 (label 32 at #252) if no lanes of $52 == 0x00000000 (0.0)
  264. label                          label 0x0000001F
  265. copy_4_slots_unmasked          $52..55 = result₃
  266. copy_constant                  $56 = 0x00000009 (1.261169e-44)
  267. copy_constant                  $57 = 0x00000003 (4.203895e-45)
  268. copy_constant                  $58 = 0x00000002 (2.802597e-45)
  269. copy_constant                  $59 = 0x00000001 (1.401298e-45)
  270. cmpeq_4_ints                   $52..55 = equal($52..55, $56..59)
  271. bitwise_and_2_ints             $52..53 &= $54..55
  272. bitwise_and_int                $52 &= $53
  273. label                          label 0x0000001E
  274. copy_slot_masked               $51 = Mask($52)
  275. label                          label 0x00000003
  276. load_condition_mask            CondMask = $30
  277. zero_slot_unmasked             $41 = 0
  278. merge_condition_mask           CondMask = $50 & $51
  279. branch_if_no_lanes_active      branch_if_no_lanes_active +20 (label 2 at #299)
  280. copy_constant                  $42 = 0x00000009 (1.261169e-44)
  281. swizzle_4                      $42..45 = ($42..45).xxxx
  282. copy_4_slots_unmasked          result₄ = $42..45
  283. branch_if_no_lanes_active      branch_if_no_lanes_active +5 (label 34 at #288)
  284. copy_constant                  i₇ = 0x00000001 (1.401298e-45)
  285. label                          label 0x00000023
  286. copy_4_slots_unmasked          $42..45 = result₄(1..3), i₇
  287. copy_4_slots_masked            result₄ = Mask($42..45)
  288. label                          label 0x00000022
  289. copy_4_slots_unmasked          $42..45 = result₄
  290. copy_constant                  $46 = 0x00000009 (1.261169e-44)
  291. copy_constant                  $47 = 0x00000009 (1.261169e-44)
  292. copy_constant                  $48 = 0x00000009 (1.261169e-44)
  293. copy_constant                  $49 = 0x00000001 (1.401298e-45)
  294. cmpeq_4_ints                   $42..45 = equal($42..45, $46..49)
  295. bitwise_and_2_ints             $42..43 &= $44..45
  296. bitwise_and_int                $42 &= $43
  297. label                          label 0x00000021
  298. copy_slot_masked               $41 = Mask($42)
  299. label                          label 0x00000002
  300. load_condition_mask            CondMask = $50
  301. zero_slot_unmasked             $2 = 0
  302. merge_condition_mask           CondMask = $40 & $41
  303. branch_if_no_lanes_active      branch_if_no_lanes_active +28 (label 1 at #331)
  304. copy_constant                  $3 = 0x00000009 (1.261169e-44)
  305. swizzle_4                      $3..6 = ($3..6).xxxx
  306. copy_4_slots_unmasked          result₅ = $3..6
  307. branch_if_no_lanes_active      branch_if_no_lanes_active +13 (label 37 at #320)
  308. copy_constant                  i₈ = 0x00000001 (1.401298e-45)
  309. label                          label 0x00000026
  310. copy_4_slots_unmasked          $3..6 = result₅(1..3), i₈
  311. copy_4_slots_masked            result₅ = Mask($3..6)
  312. copy_slot_unmasked             $3 = i₈
  313. copy_constant                  $4 = 0x00000001 (1.401298e-45)
  314. add_int                        $3 += $4
  315. copy_slot_masked               i₈ = Mask($3)
  316. copy_constant                  $4 = 0x00000004 (5.605194e-45)
  317. cmpne_int                      $3 = notEqual($3, $4)
  318. stack_rewind
  319. branch_if_no_active_lanes_eq   branch -10 (label 38 at #309) if no lanes of $3 == 0x00000000 (0.0)
  320. label                          label 0x00000025
  321. copy_4_slots_unmasked          $3..6 = result₅
  322. copy_constant                  $7 = 0x00000009 (1.261169e-44)
  323. copy_constant                  $8 = 0x00000001 (1.401298e-45)
  324. copy_constant                  $9 = 0x00000002 (2.802597e-45)
  325. copy_constant                  $10 = 0x00000003 (4.203895e-45)
  326. cmpeq_4_ints                   $3..6 = equal($3..6, $7..10)
  327. bitwise_and_2_ints             $3..4 &= $5..6
  328. bitwise_and_int                $3 &= $4
  329. label                          label 0x00000024
  330. copy_slot_masked               $2 = Mask($3)
  331. label                          label 0x00000001
  332. load_condition_mask            CondMask = $40
  333. swizzle_4                      $2..5 = ($2..5).xxxx
  334. copy_4_constants               $6..9 = colorRed
  335. copy_4_constants               $10..13 = colorGreen
  336. mix_4_ints                     $2..5 = mix($6..9, $10..13, $2..5)
  337. load_src                       src.rgba = $2..5

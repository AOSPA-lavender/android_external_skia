[immutable slots]
testMatrix2x3(0) = 0x3F800000 (1.0)
testMatrix2x3(1) = 0x40000000 (2.0)
testMatrix2x3(2) = 0x40400000 (3.0)
testMatrix2x3(3) = 0x40800000 (4.0)
testMatrix2x3(4) = 0x40A00000 (5.0)
testMatrix2x3(5) = 0x40C00000 (6.0)
float2x2(1.0, 3.0, 2.0, 4.0)(0) = 0x3F800000 (1.0)
float2x2(1.0, 3.0, 2.0, 4.0)(1) = 0x40400000 (3.0)
float2x2(1.0, 3.0, 2.0, 4.0)(2) = 0x40000000 (2.0)
float2x2(1.0, 3.0, 2.0, 4.0)(3) = 0x40800000 (4.0)
float3x2(1.0, 4.0, 2.0, 5.0, 3.0, 6.0)(0) = 0x3F800000 (1.0)
float3x2(1.0, 4.0, 2.0, 5.0, 3.0, 6.0)(1) = 0x40800000 (4.0)
float3x2(1.0, 4.0, 2.0, 5.0, 3.0, 6.0)(2) = 0x40000000 (2.0)
float3x2(1.0, 4.0, 2.0, 5.0, 3.0, 6.0)(3) = 0x40A00000 (5.0)
float3x2(1.0, 4.0, 2.0, 5.0, 3.0, 6.0)(4) = 0x40400000 (3.0)
float3x2(1.0, 4.0, 2.0, 5.0, 3.0, 6.0)(5) = 0x40C00000 (6.0)
float3x3(1.0, 4.0, 7.0, 2.0, 5.0, 8.0, 3.0, 6.0, 9.0)(0) = 0x3F800000 (1.0)
float3x3(1.0, 4.0, 7.0, 2.0, 5.0, 8.0, 3.0, 6.0, 9.0)(1) = 0x40800000 (4.0)
float3x3(1.0, 4.0, 7.0, 2.0, 5.0, 8.0, 3.0, 6.0, 9.0)(2) = 0x40E00000 (7.0)
float3x3(1.0, 4.0, 7.0, 2.0, 5.0, 8.0, 3.0, 6.0, 9.0)(3) = 0x40000000 (2.0)
float3x3(1.0, 4.0, 7.0, 2.0, 5.0, 8.0, 3.0, 6.0, 9.0)(4) = 0x40A00000 (5.0)
float3x3(1.0, 4.0, 7.0, 2.0, 5.0, 8.0, 3.0, 6.0, 9.0)(5) = 0x41000000 (8.0)
float3x3(1.0, 4.0, 7.0, 2.0, 5.0, 8.0, 3.0, 6.0, 9.0)(6) = 0x40400000 (3.0)
float3x3(1.0, 4.0, 7.0, 2.0, 5.0, 8.0, 3.0, 6.0, 9.0)(7) = 0x40C00000 (6.0)
float3x3(1.0, 4.0, 7.0, 2.0, 5.0, 8.0, 3.0, 6.0, 9.0)(8) = 0x41100000 (9.0)

store_src_rg                   coords = src.rg
init_lane_masks                CondMask = LoopMask = RetMask = true
copy_4_uniforms                $0..3 = testMatrix2x2
swizzle_3                      $1..3 = ($1..3).yxz
copy_4_slots_unmasked          $4..7 = float2x2(1.0, 3.0, 2.0, 4.0)
cmpeq_4_floats                 $0..3 = equal($0..3, $4..7)
bitwise_and_2_ints             $0..1 &= $2..3
bitwise_and_int                $0 &= $1
copy_4_slots_unmasked          $1..4 = testMatrix2x3(0..3)
copy_2_slots_unmasked          $5..6 = testMatrix2x3(4..5)
shuffle                        $2..6 = ($2..6)[2 0 3 1 4]
copy_4_slots_unmasked          $7..10 = float3x2(1.0, 4.0, 2.0, 5.0, 3.0, 6.0)(0..3)
copy_2_slots_unmasked          $11..12 = float3x2(1.0, 4.0, 2.0, 5.0, 3.0, 6.0)(4..5)
cmpeq_n_floats                 $1..6 = equal($1..6, $7..12)
bitwise_and_3_ints             $1..3 &= $4..6
bitwise_and_int                $2 &= $3
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
copy_4_uniforms                $1..4 = testMatrix3x3(0..3)
copy_4_uniforms                $5..8 = testMatrix3x3(4..7)
copy_uniform                   $9 = testMatrix3x3(8)
shuffle                        $2..9 = ($2..9)[2 5 0 3 6 1 4 7]
copy_4_slots_unmasked          $10..13 = float3x3(1.0, 4.0, 7.0, 2.0, 5.0, 8.0, 3.0, 6.0, 9.0)(0..3)
copy_4_slots_unmasked          $14..17 = float3x3(1.0, 4.0, 7.0, 2.0, 5.0, 8.0, 3.0, 6.0, 9.0)(4..7)
copy_slot_unmasked             $18 = float3x3(1.0, 4.0, 7.0, 2.0, 5.0, 8.0, 3.0, 6.0, 9.0)(8)
cmpeq_n_floats                 $1..9 = equal($1..9, $10..18)
bitwise_and_4_ints             $2..5 &= $6..9
bitwise_and_2_ints             $2..3 &= $4..5
bitwise_and_int                $2 &= $3
bitwise_and_int                $1 &= $2
bitwise_and_int                $0 &= $1
swizzle_4                      $0..3 = ($0..3).xxxx
copy_4_uniforms                $4..7 = colorRed
copy_4_uniforms                $8..11 = colorGreen
mix_4_ints                     $0..3 = mix($4..7, $8..11, $0..3)
load_src                       src.rgba = $0..3
